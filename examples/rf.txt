import scas.base.{BigInteger, Rational}
import scas.quotient.RationalFunction
import BigInteger.given
import Rational.Implicits.given

val q = RationalFunction(Rational)("x")
val List(x) = q.generators
import q.{instance, coef2poly, ring2quotient}

assert (x + 1%%2 >< 1%%2 + x)
assert (x + 1 >< 1 + x)
assert ((x\2-1)/(x-1) >< x+1)
assert ((1-x\2)/(1-x) >< 1+x)
assert (x / 2 >< 1%%2*x)
