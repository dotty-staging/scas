import scala.language.implicitConversions
import scas.{BigInteger, ModInteger, int2bigInt}
import scas.power.Lexicographic
import scas.polynomial.TreePolynomial
import TreePolynomial.coef2poly

given r: TreePolynomial[BigInteger, Array[Int]] = new TreePolynomial(using ModInteger(2), Lexicographic("x"))
val List(x) = r.generators.toList

assert(1 + x + 1 >< x)
assert(r.toString == "ModInteger(2)(x)")
assert(r.math == ModInteger(2)(x).math)
